01----目录结构
Linux的目录结构是一个树形结构，只有一个跟目录/，所有文件都在它下面。

Linux路劲的描述方式
*  在Linux系统中，路径之间的层级关系，使用：/来表示
如：/usr/local/hello.txt
注意：
1、开头/ 表示根目录
2、后面/ 表示层级关系

*  在Windows系统重，路径之间的层级关系，使用：\来表示
如：D:\data\work\hello.txt
注意：
1、D: 表示D盘
2、\ 表示层级关系

02----Linux命令基础

*  什么是命令、命令行
命令行：Linux终端，可以提供字符化的操作页面供命令执行
命令：Linux程序、操作指令，可以以字符化的形式去使用

*  Linux命令基础格式
无论是什么命令，用于什么用途，在Linux中，命令有其通用的格式：command [-options] [parameter]
· command：命令本身
· -options：[可选，非必填]命令的一些选项，可以通过选项控制命令的行为细节
· parameter：[可选，非必填]命令的参数，多数用于命令的指向目标等
示例：
· ls -l /home/itheima，ls是命令本身，-l是命令选项，/home/itheima是命令参数
意思是以列表的形式，显示/home/itheima目录内的内容
· cp -r test1 test2，cp是命令本身，-r是命令选项，test1和test2是命令参数
意思是复制文件夹test1 成为 test2

03----ls命令入门

*  ls命令
ls命令的作用是列出目录下的内容，语法细节如下：ls [-a -l -h] [Linux路径]
· -a -l -h 是可选的选项
· Linux路径是此命令可选的参数
当不使用选项和参数，直接使用ls命令本体，表示：以平铺形式，列出当前工作目录下的内容

*  HOME目录和工作目录
· 当前登入用户的HOME目录作为当前工作目录，所以ls命令列出的是HOME目录的内容
· HOME目录，每个Linux操作用户在Linux系统的个人账户目录，路径在：/home/用户名
如：/home/itheima

04----ls命令的选项和参数

*  ls命令的-a选项
· -a选项，表示：all的意思，即列出全部文件(包含隐藏的文件/文件夹)
· 以 . 开头的文件，表示Linux系统的隐藏文件/文件夹（只要以 . 开头的就能自动隐藏）
· 只有通过-a选项，才能看到这些隐藏的文件/文件夹

*  ls命令的-l选项
· -l选项，表示：以列表（竖向排列）的形式展示内容，并展示更多信息

*  ls命令选项的组合使用
语法中的选项是可以组合使用的，比如：
· ls -a -l
· ls -al
· ls -la
上述三种写法都是一样的，表示同时应用-l和-a的功能
ls命令选项和参数组合只用
如：ls -al /

*  ls命令的-h选项
· -h表示以易于阅读的形式，列出文件大小，如K、M、G
· -h选项必须要搭配 -l 一起使用

05----cd pwd命令

*  cd切换工作目录
当Linux终端打开时，会默认以用户的HOME目录作为当前的工作目录，我们可以通过cd命令，更改当前所在的工作目录。
cd命令来自英文：Change Directory
语法：cd Linux路径
· cd命令无需选项，只有参数，表示要切换到那个目录下
· cd命令直接执行，不写参数，表示回到用户的HOME目录

*  pwd查看当前工作目录
通过ls来验证当前的工作目录，其实不恰当，我们可以通过pwd命令，来查看当前工作目录
pwd命令来自英文：Print Work Directory
语法：pwd
· pwd命令，无选项，无参数，直接输入pwd即可

06----相对路径、绝对路径和特殊路径符

*  相对路径和绝对路径
· 绝对路径：以根目录为起点，描述路径的一种写法，路径描述以/开头
如：cd /home/itheima/Desktop
· 相对路径：以当前目录为起点，描述的一种写法，路径描述无需以/开头
如：cd Desktop 
 
*  特殊路径符
当前工作目录处于：/home/itheima/Desktop 现在想要向上回退一级，切换到目录/home/itheima中，如何做
· 可以直接通过cd，即可回到HOME目录
· 也可以通过特殊路径符来完成
1、. 表示当前目录，比如cd ./Deaktop 表示切换到当前目录下的Desktop目录内，和cd Desktop效果一致
2、 .. 表示上一级目录，比如：cd .. 即可切换到上一级目录，cd../.. 切换到上二级的目录
3、 ~ 表示HOME目录，比如：cd ~ 即可切换到HOME目录或cd ~/Desktop，切换到HOME内的Desktop目录

./test/hello.txt
../test/hello.txt
~/test/hello.txt

07----mkdir命令

*  mkdir命令
通过mkdir命令创建新的目录（文件夹）
mkdir来自英文：Make Directory
语法：mkdir [-p] Linux路径
· 参数必填，表示Linux，即要创建的文件夹的路径，相对路径或绝对路径均可
· -p选项可选，表示自动创建不存在的父目录，适用于创建连续多层级的目录

*  mkdir -p 选项
如果想要一次性创建多个层级的目录，如：mkdir itcast/good/666 会报错，因为上级目录itcast和good并不存在，所以无法创建666目录，可以通过-p选项，将一整个链条都创建完成，如：mkdir -p itcast/good/666

08----touch、cat、more命令

*  touch创建文件
语法：touch Linux路径
 · touch命令无选项，参数必填，表示要创建的文件路径，相对、绝对、特殊路径符均可使用

*  cat命令 查看文件内容
语法：cat Linux路径
· cat命令无选项，参数必填，被查看的文件路径，相对、绝对、特殊路径符均可使用

*  more命令 查看文件内容
语法：more Linux路径
· more命令无选项，参数必填，被查看的文件路径，相对、绝对、特殊路径符均可使用
与cat不同的是：
· cat是直接将内容全部显示出来
· more支持翻页。如果文件内容过多，可以一页页的展示
Linux系统内置有一个文件，路径为：/etc/services 使用命令
· 在查看的过程中，通过空格翻页
· 通过q退出查看

09----cp、mv、rm命令

*  cp命令复制文件或文件夹
copy命令来自英文单词：copy
语法：copy [-r] 参数1 参数2
· -r选项可选，用于复制文件夹，表示递归
· 参数1，Linux路径，表示被复制的文件或文件夹
· 参数2，Linux路径，表示要复制去的地方

*  mv移动文件或文件夹
mv命令来自英文单词：move
语法：mv 参数1 参数2
· 参数1，Linux路径，表示被移动的文件或文件夹
· 参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名，确保目标存在

*  rm删除文件或文件夹
rm命令来自英文单词：remove
语法：rm [-r -f] 参数1 参数2
· 同cp命令一样，-r选项用于删除文件夹
· -f表示force，强制删除(不会弹出提示确认信息)
 · 普通用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示
 · 所以一般用户用不到 -f 选项
· 参数1、参数2、...... 、参数N表示要删除的文件或文件夹路径，按照空格隔开

*   rm删除文件或文件夹--通配符
rm命令支持通配符*，用来做模糊匹配
· 符号*表示通配符，即匹配任意内容（包含空），实例
· test*，表示匹配任何以test开头的内容
· *test，表示匹配任何以test结尾的内容
· *test*，表示匹配任何包含test的内容

10----which、find命令

*  which命令
我们在前面学习的Linux命令，其实它们的本体就是一个个的二进制可执行程序。和Windows系统中的 .exe文件，是一个意思。
我们可以通过which命令，查看所使用的一系列命令的程序文件存放在哪里。
语法：which 要查找的命令

*  find命令-按文件名查找文件
语法：find 起始路径 -name  '被查找文件名'

*  find命令-通配符
find命令支持通配符*，用来做模糊查询
· 符号*表示通配符，即匹配任意内容（包含空），实例
· test*，表示匹配任何以test开头的内容
· *test，表示匹配任何以test结尾的内容
· *test*，表示匹配任何包含test的内容

*  find命令-按文件大小查找文件
语法：find 起始路径 -size +|-   n[kMG]
·  +、-表示大于和小于
·  n表示大小数字
·  kMG表示大小单位，k(小写字母)表示kb，M表示MB，G表示GB
示例：
·  查找小于10KB的文件：find / size -10k
·  查找大于100MB的文件：find / -size +100M
·  查找大于1GB的文件：find / -size +1G

11----grep、wc、管道符

*  grep命令
可以通过grep命令，从文件中通过关键字过滤文件行
语法：grep [-n] 关键字 文件路径
· 选项-n,可选，表示在结果中显示匹配的行的行号
· 参数，关键字，必填，表示过滤的关键字，带有空格或其他特殊符号，建议使用 ' ' 将关键字包围起来
· 参数，文件路径，必填，表示要过滤的文件路径，可作为内容输入端口

*  wc命令做数量统计
可以通过wc命令统计文件的行数、单词数量等
语法：wc [-c -m -l -w] 文件路径
· 选项，-c，统计bytes数量
· 选项，-m，统计字符数量
· 选项，-l，统计行数
· 选项，-w，统计单词数量
· 参数，文件路径，被统计的文件，可作为内容输入端口
wc 不加选项，依次展示行数、单词数、字节数、文件路径

*  管道符
特殊符号，管道符：|
含义：将管道符左边命令的结果，作为右边命令的输入
如：cat itheima | grep ithema

12----echo、tail、重定向符

*  echo命令
可以使用echo命令在命令行内输出指定内容
语法：echo 输出内容
· 无需选项，只有一个参数，表示要输出的内容，复杂内容可以用 ' ' 包围

*  ` 反引号
看一下命令：echo pwd ，本意是想输出当前的工作路径，但是pwd被作为普通字符输出了。我们可以通过将命令用反引号`将其包围，被`包围的内容，会被作为命令执行，而非普通字符

*  重定向符
两个特殊符号：重定向符：>和>>
· >：将左侧命令的结果，覆盖写入到符号右侧指定的文件中
· >>：将左侧命令的结果，追加写入到符号右侧指定的文件中

*  tail命令
使用tail命令，可以查看文件尾部内容，跟踪文件的最新更改
语法：tail [-f -num] Linux路径
· 参数，Linux路径，表示被跟踪的文件路径
· 选项，-f，表示持续跟踪
· 选项，-num，数字，表示查看尾部多少行，不填默认10行

13----vi编辑器

*  vi\vim编辑器的三种工作模式
· 命令模式：所敲的按键编辑器都理解为命令，以命令驱动执行不同的功能，此模型下，不能自由进行文本编辑
· 输入模式：此模式下，可以对文件内容进行自由编辑
· 底线命令模式：以：开始，通常用于文件的保存，退出

*  命令模式
语法：vi 文件路径；vim文件路径；
vim兼容全部的vi功能，后续全部使用vim命令
· 如果文件路径表示的文件不存在，那么此命令会用于编辑新文件
· 如果文件路径表示的文件存在，那么此命令会用于编辑已有文件

* 快速体验
1、使用：vim hello.txt，编辑一个新文件，执行后进入的是命令模式
2、在命令模式内，按键盘i，进入输入模式
3、在输入模式内输入内容：itheima and itcast
4、在输入完成后，按esc回退至命令模式
5、在命令模式内，按键盘 ：，进入底线命令模式
6、在底线命令模式内wq，保存文件并退出vi编辑器

vi编辑器命令模式：yy 复制 p 粘贴 dd 删除  u 撤销  /'内容'  进入搜索模式  nyy  复制当前行和下面的n行  ndd 删除当前行和下面的n行
gg 跳到首行 G 跳到行尾 dG 从当前行，向下全部删除 dgg 从当前行开始，向上全部删除 
d$ 从当前光标开始，删除到本行的结尾 d0 从当前光标开始，删除到本行的开头

vi编辑器底线命令模式：:wq  保存并退出  :q  仅退出  :q!  强制退出  :w  仅保存  :set nu 显示行号  :set paste 设置粘贴模式

















